package com.gsg.event.domain.model.event;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.gsg.kernel.usermgmt.User;
import com.gsg.event.domain.model.invite.InviteManager;
import com.gsg.kernel.usermgmt.UserId;

import javax.persistence.*;
import java.util.List;
import java.util.UUID;


public abstract class AbstractEvent implements Event{

    protected final EventId eventId;
    private List<UUID> eventWishlists;
    private UserId eventHost;
    private EventDateTime eventDateTime;
    private String eventForPerson;
    private EventLocationAddress eventLocationAddress;
    private String eventLocationMapLink;
    private InviteManager inviteManager;

    public AbstractEvent(UserId eventHost, String eventForPerson){
        this.eventHost = eventHost;
        this.eventForPerson = eventForPerson;
        this.eventId = EventId.getNextId();

    }



    private void initializeInviteManager()
    {

    }

    public EventId getEventId() {
        return eventId;
    }

    public List<UUID> getEventWishlists() {
        return eventWishlists;
    }

    public UserId getEventHost() {
        return eventHost;
    }

    public EventDateTime getEventDateTime() {
        return eventDateTime;
    }

    public String getEventForPerson() {
        return eventForPerson;
    }

    public EventLocationAddress getEventLocationAddress() {
        return eventLocationAddress;
    }

    public String getEventLocationMapLink() {
        return eventLocationMapLink;
    }

    public InviteManager getInviteManager() {
        return inviteManager;
    }
}
